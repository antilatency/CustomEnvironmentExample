using UnityEditor;
[CustomPropertyDrawer(typeof(Antilatency.Alt.Tracking.MarkerIndex))]
class AntilatencyAltTrackingMarkerIndexPropertyDrawer : AntilatenctInterfaceContractEnumPropertyDrawer<Antilatency.Alt.Tracking.MarkerIndex>{}
[CustomPropertyDrawer(typeof(Antilatency.Alt.Tracking.Stage))]
class AntilatencyAltTrackingStagePropertyDrawer : AntilatenctInterfaceContractEnumPropertyDrawer<Antilatency.Alt.Tracking.Stage>{}
[CustomPropertyDrawer(typeof(Antilatency.DeviceNetwork.UsbVendorId))]
class AntilatencyDeviceNetworkUsbVendorIdPropertyDrawer : AntilatenctInterfaceContractEnumPropertyDrawer<Antilatency.DeviceNetwork.UsbVendorId>{}
[CustomPropertyDrawer(typeof(Antilatency.DeviceNetwork.NodeHandle))]
class AntilatencyDeviceNetworkNodeHandlePropertyDrawer : AntilatenctInterfaceContractEnumPropertyDrawer<Antilatency.DeviceNetwork.NodeHandle>{}
[CustomPropertyDrawer(typeof(Antilatency.DeviceNetwork.NodeStatus))]
class AntilatencyDeviceNetworkNodeStatusPropertyDrawer : AntilatenctInterfaceContractEnumPropertyDrawer<Antilatency.DeviceNetwork.NodeStatus>{}
[CustomPropertyDrawer(typeof(Antilatency.DeviceNetwork.LogLevel))]
class AntilatencyDeviceNetworkLogLevelPropertyDrawer : AntilatenctInterfaceContractEnumPropertyDrawer<Antilatency.DeviceNetwork.LogLevel>{}
